// Generated by CoffeeScript 1.7.1
(function() {
  cas.BongInputHelper = (function() {
    function BongInputHelper(input) {
      this.fInput = input;
      this.fNBells = -1;
    }

    BongInputHelper.prototype.isComment = function(line) {
      if ((line.length === 0) || "*#".indexOf(line.charAt(0)) >= 0) {
        return true;
      }
      return false;
    };

    BongInputHelper.prototype.getInputSource = function() {
      return "File";
    };

    BongInputHelper.prototype.getInputName = function() {
      return this.fFilename;
    };

    BongInputHelper.prototype.getNBells = function() {
      return this.fNBells;
    };

    BongInputHelper.prototype.isOpen = function() {
      return this.fInputListener !== null && !this.isClosed();
    };

    BongInputHelper.prototype.isClosed = function() {
      return this.fClosed;
    };

    BongInputHelper.prototype.startLoad = function(pipeline) {
      this.fInputListener = pipeline;
      return this.processLines();
    };

    BongInputHelper.prototype.processLines = function() {
      var line, lines, _i, _len;
      lines = this.fInput.split('\n');
      for (_i = 0, _len = lines.length; _i < _len; _i++) {
        line = lines[_i];
        line = line.trim();
        if (!this.isComment(line)) {
          this.processLine(line);
        }
      }
      return this.fInputListener.notifyInputComplete();
    };

    BongInputHelper.prototype.readStrokeCharacter = function(stroke) {
      if (stroke === 'H') {
        return cas.HANDSTROKE;
      }
      if (stroke === 'B') {
        return cas.BACKSTROKE;
      }
      console.log("Format error in file - expecting stroke H or B but got: '" + stroke + "'");
      return cas.UNKNOWNSTROKE;
    };

    BongInputHelper.prototype.readBellCharacter = function(bell) {
      var b;
      if (bell === 'O') {
        bell = '0';
      }
      b = cas.BELL_CHARS.indexOf(bell) + 1;
      if (b <= 0) {
        console.console.log("Format error in file - bad bell character: " + bell);
      }
      return b;
    };

    return BongInputHelper;

  })();

}).call(this);
