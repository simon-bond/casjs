// Generated by CoffeeScript 1.7.1
(function() {
  cas.VisualiserHelper = (function() {
    function VisualiserHelper(name, info) {
      this.fName = name;
      this.fInfo = info;
      this.clearData();
    }

    VisualiserHelper.prototype.clearData = function() {
      this.fRows = new cas.AveragedRowData();
      return this.fNRowsProcessed = 0;
    };

    VisualiserHelper.prototype.setAnalysisListener = function(listener) {
      return this.fListener = listener;
    };

    VisualiserHelper.prototype.getNBells = function() {
      return this.fNBells;
    };

    VisualiserHelper.prototype.newRowsAvailable = function(rowSource) {
      var _results;
      this.fNBells = rowSource.getNBells();
      _results = [];
      while (this.fNRowsProcessed < rowSource.getNRows()) {
        _results.push(this.newRow(rowSource.getRow(this.fNRowsProcessed++)));
      }
      return _results;
    };

    VisualiserHelper.prototype.notifyLastRowRung = function() {
      return this.fListener.analysisComplete();
    };

    VisualiserHelper.prototype.getAveragedTouchData = function() {
      return new cas.TouchStats(this.fRows, this.fRows.getNBells());
    };

    VisualiserHelper.prototype.addAveragedRow = function(row, endTime, handstrokeGap, duration) {
      this.fRows.addRow(row, endTime, handstrokeGap, duration);
      return this.fListener.newAveragedRowAvailable();
    };

    VisualiserHelper.prototype.getName = function() {
      return this.fName;
    };

    VisualiserHelper.prototype.getInfo = function() {
      if (this.fInfo === null || this.fInfo.trim().length() === 0) {
        return this.fName;
      }
      return this.fInfo;
    };

    VisualiserHelper.prototype.getNRows = function() {
      return this.fRows.getNRows();
    };

    VisualiserHelper.prototype.getRow = function(i) {
      return this.fRows.getRow(i);
    };

    return VisualiserHelper;

  })();

}).call(this);
